<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.dao.ProductInMapper">
  <resultMap id="BaseResultMap" type="com.woniu.domain.ProductIn">
    <id column="pi_id" jdbcType="VARCHAR" property="piId" />
    <result column="pi_date" jdbcType="TIMESTAMP" property="piDate" />
    <result column="pi_allprice" jdbcType="DOUBLE" property="piAllprice" />
    <result column="pi_payway" jdbcType="VARCHAR" property="piPayway" />
    <result column="pi_Pay" jdbcType="VARCHAR" property="piPay" />
    <result column="staff_id" jdbcType="VARCHAR" property="staffId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pi_id, pi_date, pi_allprice, pi_payway, pi_Pay, staff_id
  </sql>
  <select id="selectByExample" parameterType="com.woniu.domain.ProductInExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_in
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_in
    where pi_id = #{piId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from product_in
    where pi_id = #{piId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.domain.ProductInExample">
    delete from product_in
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.domain.ProductIn">
    insert into product_in (pi_id, pi_date, pi_allprice, 
      pi_payway, pi_Pay, staff_id
      )
    values (#{piId,jdbcType=VARCHAR}, #{piDate,jdbcType=TIMESTAMP}, #{piAllprice,jdbcType=DOUBLE}, 
      #{piPayway,jdbcType=VARCHAR}, #{piPay,jdbcType=VARCHAR}, #{staffId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.domain.ProductIn">
    insert into product_in
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="piId != null">
        pi_id,
      </if>
      <if test="piDate != null">
        pi_date,
      </if>
      <if test="piAllprice != null">
        pi_allprice,
      </if>
      <if test="piPayway != null">
        pi_payway,
      </if>
      <if test="piPay != null">
        pi_Pay,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="piId != null">
        #{piId,jdbcType=VARCHAR},
      </if>
      <if test="piDate != null">
        #{piDate,jdbcType=TIMESTAMP},
      </if>
      <if test="piAllprice != null">
        #{piAllprice,jdbcType=DOUBLE},
      </if>
      <if test="piPayway != null">
        #{piPayway,jdbcType=VARCHAR},
      </if>
      <if test="piPay != null">
        #{piPay,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.domain.ProductInExample" resultType="java.lang.Long">
    select count(*) from product_in
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_in
    <set>
      <if test="record.piId != null">
        pi_id = #{record.piId,jdbcType=VARCHAR},
      </if>
      <if test="record.piDate != null">
        pi_date = #{record.piDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.piAllprice != null">
        pi_allprice = #{record.piAllprice,jdbcType=DOUBLE},
      </if>
      <if test="record.piPayway != null">
        pi_payway = #{record.piPayway,jdbcType=VARCHAR},
      </if>
      <if test="record.piPay != null">
        pi_Pay = #{record.piPay,jdbcType=VARCHAR},
      </if>
      <if test="record.staffId != null">
        staff_id = #{record.staffId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_in
    set pi_id = #{record.piId,jdbcType=VARCHAR},
      pi_date = #{record.piDate,jdbcType=TIMESTAMP},
      pi_allprice = #{record.piAllprice,jdbcType=DOUBLE},
      pi_payway = #{record.piPayway,jdbcType=VARCHAR},
      pi_Pay = #{record.piPay,jdbcType=VARCHAR},
      staff_id = #{record.staffId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.domain.ProductIn">
    update product_in
    <set>
      <if test="piDate != null">
        pi_date = #{piDate,jdbcType=TIMESTAMP},
      </if>
      <if test="piAllprice != null">
        pi_allprice = #{piAllprice,jdbcType=DOUBLE},
      </if>
      <if test="piPayway != null">
        pi_payway = #{piPayway,jdbcType=VARCHAR},
      </if>
      <if test="piPay != null">
        pi_Pay = #{piPay,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=VARCHAR},
      </if>
    </set>
    where pi_id = #{piId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.domain.ProductIn">
    update product_in
    set pi_date = #{piDate,jdbcType=TIMESTAMP},
      pi_allprice = #{piAllprice,jdbcType=DOUBLE},
      pi_payway = #{piPayway,jdbcType=VARCHAR},
      pi_Pay = #{piPay,jdbcType=VARCHAR},
      staff_id = #{staffId,jdbcType=VARCHAR}
    where pi_id = #{piId,jdbcType=VARCHAR}
  </update>
</mapper>