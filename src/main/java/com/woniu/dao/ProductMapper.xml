<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.woniu.domain.Product">
    <id column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="tid" jdbcType="VARCHAR" property="tid" />
    <result column="supplier_id" jdbcType="VARCHAR" property="supplierId" />
    <result column="specification" jdbcType="VARCHAR" property="specification" />
    <result column="product_state" jdbcType="VARCHAR" property="productState" />
    <result column="product_unit" jdbcType="VARCHAR" property="productUnit" />
    <result column="import_price" jdbcType="DOUBLE" property="importPrice" />
    <result column="sell_price" jdbcType="DOUBLE" property="sellPrice" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="stock_alarm" jdbcType="INTEGER" property="stockAlarm" />
    <result column="barcode" jdbcType="VARCHAR" property="barcode" />
    <result column="dead_date" jdbcType="TIMESTAMP" property="deadDate" />
    <result column="pi_id" jdbcType="VARCHAR" property="piId" />
    <result column="sale_id" jdbcType="VARCHAR" property="saleId" />
    <result column="pb_id" jdbcType="VARCHAR" property="pbId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    product_id, product_name, tid, supplier_id, specification, product_state, product_unit, 
    import_price, sell_price, stock, stock_alarm, barcode, dead_date, pi_id, sale_id, 
    pb_id
  </sql>
  <select id="selectByExample" parameterType="com.woniu.domain.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where product_id = #{productId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from product
    where product_id = #{productId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.domain.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.domain.Product">
    insert into product (product_id, product_name, tid, 
      supplier_id, specification, product_state, 
      product_unit, import_price, sell_price, 
      stock, stock_alarm, barcode, 
      dead_date, pi_id, sale_id, 
      pb_id)
    values (#{productId,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{tid,jdbcType=VARCHAR}, 
      #{supplierId,jdbcType=VARCHAR}, #{specification,jdbcType=VARCHAR}, #{productState,jdbcType=VARCHAR}, 
      #{productUnit,jdbcType=VARCHAR}, #{importPrice,jdbcType=DOUBLE}, #{sellPrice,jdbcType=DOUBLE}, 
      #{stock,jdbcType=INTEGER}, #{stockAlarm,jdbcType=INTEGER}, #{barcode,jdbcType=VARCHAR}, 
      #{deadDate,jdbcType=TIMESTAMP}, #{piId,jdbcType=VARCHAR}, #{saleId,jdbcType=VARCHAR}, 
      #{pbId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.domain.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="specification != null">
        specification,
      </if>
      <if test="productState != null">
        product_state,
      </if>
      <if test="productUnit != null">
        product_unit,
      </if>
      <if test="importPrice != null">
        import_price,
      </if>
      <if test="sellPrice != null">
        sell_price,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="stockAlarm != null">
        stock_alarm,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
      <if test="deadDate != null">
        dead_date,
      </if>
      <if test="piId != null">
        pi_id,
      </if>
      <if test="saleId != null">
        sale_id,
      </if>
      <if test="pbId != null">
        pb_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="specification != null">
        #{specification,jdbcType=VARCHAR},
      </if>
      <if test="productState != null">
        #{productState,jdbcType=VARCHAR},
      </if>
      <if test="productUnit != null">
        #{productUnit,jdbcType=VARCHAR},
      </if>
      <if test="importPrice != null">
        #{importPrice,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice != null">
        #{sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="stockAlarm != null">
        #{stockAlarm,jdbcType=INTEGER},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="deadDate != null">
        #{deadDate,jdbcType=TIMESTAMP},
      </if>
      <if test="piId != null">
        #{piId,jdbcType=VARCHAR},
      </if>
      <if test="saleId != null">
        #{saleId,jdbcType=VARCHAR},
      </if>
      <if test="pbId != null">
        #{pbId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.domain.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.tid != null">
        tid = #{record.tid,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      </if>
      <if test="record.specification != null">
        specification = #{record.specification,jdbcType=VARCHAR},
      </if>
      <if test="record.productState != null">
        product_state = #{record.productState,jdbcType=VARCHAR},
      </if>
      <if test="record.productUnit != null">
        product_unit = #{record.productUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.importPrice != null">
        import_price = #{record.importPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.sellPrice != null">
        sell_price = #{record.sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.stockAlarm != null">
        stock_alarm = #{record.stockAlarm,jdbcType=INTEGER},
      </if>
      <if test="record.barcode != null">
        barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
      <if test="record.deadDate != null">
        dead_date = #{record.deadDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.piId != null">
        pi_id = #{record.piId,jdbcType=VARCHAR},
      </if>
      <if test="record.saleId != null">
        sale_id = #{record.saleId,jdbcType=VARCHAR},
      </if>
      <if test="record.pbId != null">
        pb_id = #{record.pbId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set product_id = #{record.productId,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      tid = #{record.tid,jdbcType=VARCHAR},
      supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      specification = #{record.specification,jdbcType=VARCHAR},
      product_state = #{record.productState,jdbcType=VARCHAR},
      product_unit = #{record.productUnit,jdbcType=VARCHAR},
      import_price = #{record.importPrice,jdbcType=DOUBLE},
      sell_price = #{record.sellPrice,jdbcType=DOUBLE},
      stock = #{record.stock,jdbcType=INTEGER},
      stock_alarm = #{record.stockAlarm,jdbcType=INTEGER},
      barcode = #{record.barcode,jdbcType=VARCHAR},
      dead_date = #{record.deadDate,jdbcType=TIMESTAMP},
      pi_id = #{record.piId,jdbcType=VARCHAR},
      sale_id = #{record.saleId,jdbcType=VARCHAR},
      pb_id = #{record.pbId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.domain.Product">
    update product
    <set>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="tid != null">
        tid = #{tid,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="specification != null">
        specification = #{specification,jdbcType=VARCHAR},
      </if>
      <if test="productState != null">
        product_state = #{productState,jdbcType=VARCHAR},
      </if>
      <if test="productUnit != null">
        product_unit = #{productUnit,jdbcType=VARCHAR},
      </if>
      <if test="importPrice != null">
        import_price = #{importPrice,jdbcType=DOUBLE},
      </if>
      <if test="sellPrice != null">
        sell_price = #{sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="stockAlarm != null">
        stock_alarm = #{stockAlarm,jdbcType=INTEGER},
      </if>
      <if test="barcode != null">
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="deadDate != null">
        dead_date = #{deadDate,jdbcType=TIMESTAMP},
      </if>
      <if test="piId != null">
        pi_id = #{piId,jdbcType=VARCHAR},
      </if>
      <if test="saleId != null">
        sale_id = #{saleId,jdbcType=VARCHAR},
      </if>
      <if test="pbId != null">
        pb_id = #{pbId,jdbcType=VARCHAR},
      </if>
    </set>
    where product_id = #{productId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.domain.Product">
    update product
    set product_name = #{productName,jdbcType=VARCHAR},
      tid = #{tid,jdbcType=VARCHAR},
      supplier_id = #{supplierId,jdbcType=VARCHAR},
      specification = #{specification,jdbcType=VARCHAR},
      product_state = #{productState,jdbcType=VARCHAR},
      product_unit = #{productUnit,jdbcType=VARCHAR},
      import_price = #{importPrice,jdbcType=DOUBLE},
      sell_price = #{sellPrice,jdbcType=DOUBLE},
      stock = #{stock,jdbcType=INTEGER},
      stock_alarm = #{stockAlarm,jdbcType=INTEGER},
      barcode = #{barcode,jdbcType=VARCHAR},
      dead_date = #{deadDate,jdbcType=TIMESTAMP},
      pi_id = #{piId,jdbcType=VARCHAR},
      sale_id = #{saleId,jdbcType=VARCHAR},
      pb_id = #{pbId,jdbcType=VARCHAR}
    where product_id = #{productId,jdbcType=VARCHAR}
  </update>
</mapper>