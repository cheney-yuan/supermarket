<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.dao.ProductInDetailMapper">
  <resultMap id="BaseResultMap" type="com.woniu.domain.ProductInDetail">
    <result column="pi_id" jdbcType="VARCHAR" property="piId" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_in_num" jdbcType="INTEGER" property="productInNum" />
    <result column="import_price" jdbcType="DOUBLE" property="importPrice" />
    <result column="specification" jdbcType="VARCHAR" property="specification" />
    <result column="supplier_id" jdbcType="VARCHAR" property="supplierId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pi_id, product_id, product_name, product_in_num, import_price, specification, supplier_id
  </sql>
  <select id="selectByExample" parameterType="com.woniu.domain.ProductInDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_in_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.woniu.domain.ProductInDetailExample">
    delete from product_in_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.domain.ProductInDetail">
    insert into product_in_detail (pi_id, product_id, product_name, 
      product_in_num, import_price, specification, 
      supplier_id)
    values (#{piId,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, 
      #{productInNum,jdbcType=INTEGER}, #{importPrice,jdbcType=DOUBLE}, #{specification,jdbcType=VARCHAR}, 
      #{supplierId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.domain.ProductInDetail">
    insert into product_in_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="piId != null">
        pi_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productInNum != null">
        product_in_num,
      </if>
      <if test="importPrice != null">
        import_price,
      </if>
      <if test="specification != null">
        specification,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="piId != null">
        #{piId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productInNum != null">
        #{productInNum,jdbcType=INTEGER},
      </if>
      <if test="importPrice != null">
        #{importPrice,jdbcType=DOUBLE},
      </if>
      <if test="specification != null">
        #{specification,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.domain.ProductInDetailExample" resultType="java.lang.Long">
    select count(*) from product_in_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_in_detail
    <set>
      <if test="record.piId != null">
        pi_id = #{record.piId,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productInNum != null">
        product_in_num = #{record.productInNum,jdbcType=INTEGER},
      </if>
      <if test="record.importPrice != null">
        import_price = #{record.importPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.specification != null">
        specification = #{record.specification,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_in_detail
    set pi_id = #{record.piId,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_in_num = #{record.productInNum,jdbcType=INTEGER},
      import_price = #{record.importPrice,jdbcType=DOUBLE},
      specification = #{record.specification,jdbcType=VARCHAR},
      supplier_id = #{record.supplierId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>